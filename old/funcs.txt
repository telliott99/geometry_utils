def init()
def __init__(self,x,y)
def get_standard_triangle(mode='acute')
def get_circle(ax,Q,r,fc='none',ec='k',ls='-',lw=1,c='k')
def get_matplotlib_circle_center_radius(c)
def get_random_points(n=3)
def scatter_points(ax,*args,c='k',s=POINT_SZ)
def draw_line_segment(ax,*args,ec='k',lw=1,ls='-')
def draw_line_segments(ax,*args,ec='k',lw=1,ls='-')
def draw_chained_line_segments(ax,*args,ec='k')
def fill_polygon(ax,*args,fc='lightsalmon',alpha=0.25)
def outline_polygon(ax,*args,ec='red')
def getXY(pL)
def get_points_from_XY(X,Y)
def get_deltas(pL)
def get_length(pL)
def get_slope_from_two_points(pL)
def invert_slope(m)
def get_perp_slope(pL)
def get_point_by_fractional_length(pL,f)
def get_point_by_absolute_length(pL,d1)
def get_intercept_for_point_slope(A,m)
def get_slope_intercept_for_two_points(pL)
def get_intersection_from_slope_intercept(m1,k1,m2,k2)
def get_intersection_from_two_lines(pL1,pL2)
def get_point_perp_on_line_from_point(A,pL)
def get_circumcircle(pL)
def get_orthocenter_and_altitudes(pL)
def get_centroid_and_medians(pL)
def get_incenter_and_bisectors(pL)
def get_angle(pL)
def get_all_angles(pL)
def get_point_reflected_on_diameter(A,cL)
def get_point_on_circle_at_distance_from_point(cL,d,A)
def get_horizontal_intercept_for_circle_point(cL,A)
def get_intersection_point_slope_circle(m,k,cL)
def get_intersection_line_segment_circle(pL,cL)
def get_intersection_circle_circle(cL1,cL2)
def get_tangent_points_on_circle_from_point(cL1,P)
def get_chord_for_circle_from_point_with_length(ax,cL1,P,d)
def find_midpoint_of_arc(pL,cL,major=True)
def rotate_one_point(P,theta)
def rotate_point_list(pL,theta)
def rotate_points_around_center_by_angle(pL,Q,theta)
def get_broken_chord_layout(ax)
def get_broken_chord_alternate_layout(ax)
def get_9point_circle(pL)
def write_one_label(P,s,dx=0,dy=0)
def write_labels(L)
def nudge(P,mode='none',f=1.0)
def label_points(points)
def mark_angle(pL,d=5)
def mark_angles(ax,aL,d=5,c='k',s=20)

